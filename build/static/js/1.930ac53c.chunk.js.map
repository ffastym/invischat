{"version":3,"sources":["components/dumb/PostPreview.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","cloudinary_react__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","PostPreview","_ref","text","length","postId","postData","a","createElement","exact","to","className","key","title","image","cloudName","publicId","alt","height","fetchFormat","width","crop","substr","author","date","viewsQty","likesQty","comments"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KA0DeQ,UA3CK,SAAAC,GAAwB,IAUtBC,EAAMC,EAVNC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,SAkB1B,OACIT,EAAAU,EAAAC,cAACR,EAAA,EAAD,CAASS,OAAK,EAACC,GAAI,cAAgBL,EAAQM,UAAU,OAAOC,IAAKP,GAC7DR,EAAAU,EAAAC,cAAA,MAAIG,UAAU,cAAcL,EAASO,SACpCP,EAASQ,OACJjB,EAAAU,EAAAC,cAAA,OAAKG,UAAU,sBACbd,EAAAU,EAAAC,cAACT,EAAA,MAAD,CAAOgB,UAAU,YAAYC,SAAUV,EAASQ,MAAOG,IAAI,IACvDpB,EAAAU,EAAAC,cAACT,EAAA,eAAD,CAAgBmB,OAAO,MAAMC,YAAY,OAAOC,MAAM,OAAOC,KAAK,YAG9ExB,EAAAU,EAAAC,cAAA,OAAKG,UAAU,cAjBLR,EAiB2BG,EAASH,KAjB9BC,EAiBoC,IAhBpDD,EAAKC,OAASA,IACdD,EAAOA,EAAKmB,OAAO,EAAGlB,EAAO,GAAK,OAG/BD,IAaHN,EAAAU,EAAAC,cAAA,OAAKG,UAAU,mBACXd,EAAAU,EAAAC,cAAA,OAAKG,UAAU,yBACXd,EAAAU,EAAAC,cAAA,QAAMG,UAAU,eAAeL,EAASiB,QACxC1B,EAAAU,EAAAC,cAAA,QAAMG,UAAU,aAAaL,EAASkB,OAE1C3B,EAAAU,EAAAC,cAAA,OAAKG,UAAU,wBACXd,EAAAU,EAAAC,cAAA,QAAMG,UAAU,kBAAkBL,EAASmB,UAC3C5B,EAAAU,EAAAC,cAAA,QAAMG,UAAU,kBAAkBL,EAASoB,UAC3C7B,EAAAU,EAAAC,cAAA,QAAMG,UAAU,qBAAqBL,EAASqB,SAASvB,QAAU","file":"static/js/1.930ac53c.chunk.js","sourcesContent":["/**\n * @author Yuriy Matviyuk\n */\nimport React from 'react'\nimport {Image, Transformation} from 'cloudinary-react';\nimport {NavLink} from \"react-router-dom\";\n\n/**\n * PostPreview component\n *\n * @param props\n\n * @returns {*}\n * @constructo\n */\nconst PostPreview = ({postId, postData}) => {\n\n    /**\n     * Crop post text\n     *\n     * @param text\n     * @param length\n     *\n     * @returns {*}\n     */\n    const cropText = (text, length) => {\n        if (text.length > length) {\n            text = text.substr(0, length-1) + '...'\n        }\n\n        return text;\n    };\n\n    return (\n        <NavLink exact to={'/ziznannya/' + postId} className='post' key={postId}>\n            <h3 className='post-title'>{postData.title}</h3>\n            {postData.image\n                ? <div className=\"post-image-wrapper\">\n                    <Image cloudName='dfgkgr7ui' publicId={postData.image} alt=''>\n                        <Transformation height=\"300\" fetchFormat=\"auto\" width=\"auto\" crop=\"scale\" />\n                    </Image>\n                </div> : false}\n            <div className=\"post-text\">{cropText(postData.text, 215)}</div>\n            <div className=\"post-additional\">\n                <div className=\"post-publication-data\">\n                    <span className=\"post-author\">{postData.author}</span>\n                    <span className=\"post-date\">{postData.date}</span>\n                </div>\n                <div className='post-popularity-data'>\n                    <span className=\"post-views-qty\">{postData.viewsQty}</span>\n                    <span className=\"post-likes-qty\">{postData.likesQty}</span>\n                    <span className=\"post-comments-qty\">{postData.comments.length || 0}</span>\n                </div>\n            </div>\n        </NavLink>\n    )\n};\n\nexport default PostPreview\n"],"sourceRoot":""}